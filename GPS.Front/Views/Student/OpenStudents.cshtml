@model IEnumerable<GraduationProjecrStore.Infrastructure.Domain.Entities.Business.Student>

@{
    ViewData["Title"] = "Students";
    Layout = "~/Views/Shared/_layout.cshtml";
}

<div class="container-fluid px-4 mt-4">

    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">Students List</h2>
        <a asp-action="OpenCreate" asp-controller="Student" class="btn btn-success">
            <i class="fas fa-plus-circle"></i> Add Student
        </a>
    </div>

    <table class="table table-striped table-bordered shadow-sm">
        <thead class="table-dark">
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Level</th>
                <th>GPA</th>
                <th>Birth Date</th>
                <th>Project</th>
                <th>Department</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var dept in Model)
            {
                <tr id="student-row-@dept.Id">
                    <td>@dept.FirstName</td>
                    <td>@dept.LastName</td>
                    <td>@dept.Level</td>
                    <td>@dept.GPA</td>
                    <td>@dept.BirthDate.ToShortDateString()</td>
                    <td>@dept.Project?.Name</td>
                    <td>@dept.Department?.Name</td>
                    <td class="text-center">
                        <a asp-action="OpenEdit" asp-controller="Student" asp-route-id="@dept.Id" class="btn btn-sm btn-outline-primary me-1" title="Edit">
                            <i class="fas fa-edit"></i>
                        </a>

                        <button type="button" class="btn btn-sm btn-outline-danger" title="Delete" onclick="openDeleteModal(@dept.Id)">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                Are you sure you want to delete this student?
            </div>

            <div class="modal-footer">
                <input type="hidden" id="deleteStudentId" />
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDelete()">Delete</button>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        let studentIdToDelete = 0;

        function openDeleteModal(studentId) {
            studentIdToDelete = studentId;
            const modal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
            modal.show();
        }

        async function confirmDelete() {
            const modal = bootstrap.Modal.getInstance(document.getElementById('deleteConfirmModal'));
            modal.hide();

            try {
                const response = await fetch(`/api/student/Delete/${studentIdToDelete}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    const row = document.getElementById(`student-row-${studentIdToDelete}`);
                    if (row) row.remove();
                    window.location.reload();
                }
            } catch (error) {
                alert("Failed to delete student.");
                console.error(error);
            }
        }
    </script>
}

<div class="d-flex justify-content-between align-items-center mt-3">
    <button id="prevBtn" class="btn btn-outline-secondary" onclick="prevPage()" disabled>
        <i class="fas fa-chevron-left"></i> Previous
    </button>
    <span id="paginationStatus" class="fw-bold"></span>
    <button id="nextBtn" class="btn btn-outline-secondary" onclick="nextPage()">
        Next <i class="fas fa-chevron-right"></i>
    </button>
</div>

<script>
    const pageSize = 5;
    let currentPage = 1;
    let students = [];

    document.addEventListener('DOMContentLoaded', () => {
        students = Array.from(document.querySelectorAll('tbody tr'));
        showPage(currentPage);
    });

    function showPage(page) {
        const start = (page - 1) * pageSize;
        const end = start + pageSize;

        students.forEach((row, index) => {
            row.style.display = index >= start && index < end ? '' : 'none';
        });

        document.getElementById('paginationStatus').innerText = `Page ${page} of ${Math.ceil(students.length / pageSize)}`;
        document.getElementById('prevBtn').disabled = page === 1;
        document.getElementById('nextBtn').disabled = end >= students.length;
    }

    function nextPage() {
        if (currentPage * pageSize < students.length) {
            currentPage++;
            showPage(currentPage);
        }
    }

    function prevPage() {
        if (currentPage > 1) {
            currentPage--;
            showPage(currentPage);
        }
    }
</script>

