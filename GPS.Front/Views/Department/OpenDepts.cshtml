@model IEnumerable<GraduationProjecrStore.Infrastructure.Domain.Entities.Business.Department>

@{
    ViewData["Title"] = "Departments";
    Layout = "~/Views/Shared/_layout.cshtml";
}

<div class="container-fluid px-4 mt-4">

    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">Departments List</h2>
        <a asp-action="CreateDept" asp-controller="Department" class="btn btn-success">
            <i class="fas fa-plus-circle"></i> Add Department
        </a>
    </div>

    <table class="table table-striped table-bordered shadow-sm">
        <thead class="table-dark">
            <tr>
                <th>Department ID</th>
                <th>Department Name</th>
                <th>Manager</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var dept in Model)
            {
                <tr id="department-row-@dept.Id">
                    <td>@dept.Id</td>
                    <td>@dept.Name</td>
                    <td>@dept.Manager</td>
                    <td class="text-center">
                        <a asp-action="EditDept" asp-controller="Department" asp-route-id="@dept.Id" class="btn btn-sm btn-outline-primary me-1" title="Edit">
                            <i class="fas fa-edit"></i>
                        </a>

                        <button type="button" class="btn btn-sm btn-outline-danger me-1" title="Delete" onclick="openDepartmentDeleteModal(@dept.Id)">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination Controls -->
    <div class="d-flex justify-content-between align-items-center mt-3">
        <button id="prevBtn" class="btn btn-outline-secondary" onclick="prevPage()" disabled>
            <i class="fas fa-chevron-left"></i> Previous
        </button>
        <span id="paginationStatus" class="fw-bold"></span>
        <button id="nextBtn" class="btn btn-outline-secondary" onclick="nextPage()">
            Next <i class="fas fa-chevron-right"></i>
        </button>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteDepartmentModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                Are you sure you want to delete this department?
            </div>

            <div class="modal-footer">
                <input type="hidden" id="deleteDepartmentId" />
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDepartmentDelete()">Delete</button>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        let departmentIdToDelete = 0;

        function openDepartmentDeleteModal(departmentId) {
            departmentIdToDelete = departmentId;
            const modal = new bootstrap.Modal(document.getElementById('deleteDepartmentModal'));
            modal.show();
        }

        async function confirmDepartmentDelete() {
            const modal = bootstrap.Modal.getInstance(document.getElementById('deleteDepartmentModal'));
            modal.hide();

            try {
                const response = await fetch(`/api/department/Delete/${departmentIdToDelete}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    const row = document.getElementById(`department-row-${departmentIdToDelete}`);
                    if (row) row.remove();
                    window.location.reload();
                }
            } catch (error) {
                alert("Failed to delete department.");
                console.error(error);
            }
        }

        // Pagination Script
        const pageSize = 5;
        let currentPage = 1;
        let departments = [];

        document.addEventListener('DOMContentLoaded', () => {
            departments = Array.from(document.querySelectorAll('tbody tr'));
            showPage(currentPage);
        });

        function showPage(page) {
            const start = (page - 1) * pageSize;
            const end = start + pageSize;

            departments.forEach((row, index) => {
                row.style.display = index >= start && index < end ? '' : 'none';
            });

            document.getElementById('paginationStatus').innerText = `Page ${page} of ${Math.ceil(departments.length / pageSize)}`;
            document.getElementById('prevBtn').disabled = page === 1;
            document.getElementById('nextBtn').disabled = end >= departments.length;
        }

        function nextPage() {
            if (currentPage * pageSize < departments.length) {
                currentPage++;
                showPage(currentPage);
            }
        }

        function prevPage() {
            if (currentPage > 1) {
                currentPage--;
                showPage(currentPage);
            }
        }
    </script>
}
